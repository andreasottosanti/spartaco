% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CombineResults.R
\name{CombineSpartaco}
\alias{CombineSpartaco}
\title{Manually combine multiple runs of SpaRTaCo}
\usage{
CombineSpartaco(x = NULL, search.dir = NULL, compute.uncertainty = T)
}
\arguments{
\item{x}{either a list of \code{spartaco} objects or a vector containing the names of the files to be combined;}

\item{search.dir}{the directory path where the file names given by \code{x} are searched. If \code{NULL}, the file paths must be specified as part of the file names is \code{x};}

\item{compute.uncertainty}{if \code{TRUE} (default), it computes the clustering uncertainty of the rows and of the columns.}
}
\value{
an object of class \code{spartaco} with the parameter estimates and the clustering labels given by the best fit across the ones in \code{x}. If \code{compute.uncertainty == T}, the clustering uncertainty measures are returned.
}
\description{
This function combines multiple runs of SpaRTaCo with the same values of K and R.
}
\details{
If each element of \code{x} is an object of class \code{spartaco}, then the function combines them into a unique spartaco object.
If the \code{spartaco} objects are stored into different files, the vector \code{x} receives the names of the files,
and \code{search.dir} is the path of the directory where the files are stored.
}
\examples{
library(spartaco)

# The following code illustruates how to combine three output of the spartaco function saved in the files output1.Rdata, output2.Rdata and output3.Rdata.
# The directory containing the files is specified as follows:
directory <- "..."
x <- c("output1.Rdata", "output2.Rdata", "output3.Rdata")
CombineSpartaco(x = x, search.dir = directory)

# In alternative, one could run:
x <- paste(directory, x, sep = "/")
CombineSpartaco(x = x)
}
\references{
Sottosanti, A. and Risso, D. (2021+) Co-clustering of Spatially Resolved Transcriptomic Data \href{https://arxiv.org/abs/2110.04872}{(preprint)}
}
\seealso{
\code{\link[=spartaco]{spartaco()}}
}
